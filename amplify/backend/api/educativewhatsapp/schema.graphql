type User @model {
  id: ID!
  email: String!
  phone: String!
  image: String
  username: String
  lastSeen: String
  userTyping: String
  updatedAt: String
  createdAt: String 
  contact: [Contact] @connection(keyName: "byContact", fields: ["id"])
  conversation: [Conversation] @connection(keyName: "byConversation", fields: ["id"])
  message: [Message] @connection(keyName: "byUserMessage", fields: ["id"])
}

type Contact @model 
  @key(name: "byContact", fields: ["userId"], queryField: "queryContactByUserId") {
  id: ID!
  userId: ID!
  email: String
  username: String
  image: String
  phone: String
  updatedAt: String
  createdAt: String 
  user: User @connection(fields: ["userId"])
}

type Conversation @model
  @key(name: "byConversation", fields: ["userId"], queryField: "queryConversationByUserId"){
  id: ID!
  userId: ID!
  username: String
  image: String
  groupIcon: String
  conversationId: ID!
  subject: String 
  type: String
  updatedAt: String
  createdAt: String
  user: User @connection(fields: ["userId"])
  message: [Message] @connection(keyName: "byConversationMessage", fields: ["conversationId"])
}


type Message @model 
  @key(name: "byUserMessage", fields: ["userId"]) @key(name: "byConversationMessage", fields: ["conversationId"], queryField: "queryMessageByConversationId") {
  id: ID!
  userId: ID!
  username: String
  image: String
  conversationId: ID!
  content: String
  type: String!
  updatedAt: String
  createdAt: String
  user: User @connection(fields: ["userId"])
  conversation: Conversation @connection(fields: ["conversationId"])
}